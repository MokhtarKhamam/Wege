import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import Navbar from "@/components/navbar/Navbar";
import { Container } from "@mui/material";
import Footer from "@/components/footer/Footer";
import ClientWrapper from "@/config/api/ClientWrapper";
import StoreProvider from "@/store/Provider";
import { ProductCart } from "@/types/producte";
import TranslationsProvider from "@/config/translation/TranslationsProvider";
import initTranslations from "../i18n";
import { dir } from "i18next";
import InitColorSchemeScript from "@mui/material/InitColorSchemeScript";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import AppThemeProvider from "@/theme/AppThemeContext";


const i18nNamespaces = ["translations"];

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;

  const { resources } = await initTranslations(locale, i18nNamespaces);

  const data = await fetch(`${process.env.NEXT_PUBLIC_API_BASE_URL}/cart`);
  const products: ProductCart[] = (await data.json()) ?? [];
  return (
    <html lang={locale} dir={dir(locale)}>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AppRouterCacheProvider options={{ enableCssLayer: false }}>
          <AppThemeProvider>
            <TranslationsProvider
              namespaces={i18nNamespaces}
              locale={locale}
              resources={resources}
            >
              <StoreProvider>
                <ClientWrapper>
                    <InitColorSchemeScript attribute="class" />
                    <Navbar products={products} />
                    <Container sx={{ py: 5 }}>{children}</Container>
                    <Footer />
                </ClientWrapper>
              </StoreProvider>
            </TranslationsProvider>
          </AppThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
